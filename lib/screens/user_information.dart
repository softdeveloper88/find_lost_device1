import 'dart:convert';import 'package:find_lost_device1/model/device_model.dart';import 'package:firebase_database/firebase_database.dart';import 'package:flutter/material.dart';import 'package:http/http.dart' as http;class UserInformation extends StatefulWidget {  String email, displayName, photoURL, uid;  UserInformation({this.email, this.displayName, this.photoURL, this.uid});  @override  _UserInfoState createState() => _UserInfoState();}class _UserInfoState extends State<UserInformation> {  List<DeviceModel> deviceModel = [];  @override  Widget build(BuildContext context) {    // FirebaseDatabase.instance.reference().once().then((DataSnapshot snapshot) {    //   Map<dynamic, dynamic> values = snapshot.value;    //   values.forEach((key, values) {    //     deviceModel.add(DeviceModel.fromSnapshot(values));    //   });    // });    return Scaffold(        appBar: AppBar(          title: Text("Find Lost Phone"),        ),        body: Container(            child: Column(                crossAxisAlignment: CrossAxisAlignment.center,                children: <Widget>[              SizedBox(                height: 10,              ),              Center(                child: Card(                  child: Container(                    child: Column(children: <Widget>[                      Padding(                        padding: const EdgeInsets.all(8.0),                        child: Container(                            height: 40.0,                            width: 40.0,                            decoration: new BoxDecoration(                              border: Border.all(),                              shape: BoxShape.circle,                              image: new DecorationImage(                                fit: BoxFit.cover,                                image: NetworkImage(widget.photoURL),                              ),                            )),                      ),                      Padding(                        padding: const EdgeInsets.all(8.0),                        child: Text(widget.displayName),                      ),                      Padding(                        padding: const EdgeInsets.all(8.0),                        child: Text(widget.email==null?'':widget.email),                      )                    ]),                  ),                ),              ),              Expanded(child: Center(                child: FutureBuilder(                    future: FirebaseDatabase.instance.reference().once(),                    builder: (BuildContext context, AsyncSnapshot<DataSnapshot> snapshot) {                      if (snapshot.hasData) {                          deviceModel.clear();                          Map<dynamic, dynamic> values = snapshot.data.value;                          values.forEach((key,values){                            if(values['email'] == widget.email) {                              deviceModel.add(DeviceModel(                                  key,                                  values['deviceModel'],                                  values['email'],                                  values['name'],                                  values['manufactureName'],                                  values['deviceToken'],                                  values['lat'],                                  values['lng']));                            }                            });                          return ListView.builder(                            itemCount: deviceModel.length,                            itemBuilder: (context, index) {                              return Card(                                color: Colors.red,                                //elevation: 2.0,                                child: GestureDetector(                                  onTap: () {                                    print("click");                                    sendFcmMessage("Find My Location","Where is my mobile",deviceModel[index].deviceToken);                                  },                                  child: new ListTile(                                    title: new Text(                                        "Device Mode:${deviceModel[index].deviceModel}"),                                  ),                                ),                              );                       });                      } else if (snapshot.hasError) {                        return Icon(Icons.error_outline);                      } else {                        return CircularProgressIndicator();                      }                    }),              ))            ])));  }  Future<bool> sendFcmMessage(String title, String message,String token) async {    try {      var url = 'https://fcm.googleapis.com/fcm/send';      var header = {        "Content-Type": "application/json",        "Authorization":        "Bearer	AAAAzpd-_iA:APA91bGqz8ppYKEP2Ff6GRn6Ksh3X-QwAGPx-c7vQTr_tpEa-y6C2VjJKAOc3duHuOrfDyJV2EE5kxVFlQLjnXYA0aFV700SjSBPb0bgC4rCxJzUI9ieeoXu4x2CvReJGfo5-wNOtTsl",      };      // var request = {      //   "notification": {      //     "title": title,      //     "text": message,      //     "sound": "default",      //     "color": "#990000",      //   },      //   "priority": "high",      //   "to": "/topics/all",      // };      var request = {        'notification': {'title': title, 'body': message},        'data': {          'click_action': 'FLUTTER_NOTIFICATION_CLICK',          'type': 'COMMENT'        },        'to':token      };      var response =      await http.post(Uri.parse(url), headers: header, body: json.encode(request));      print(response.body);      return true;    } catch (e) {      print(e);      return false;    }  }}