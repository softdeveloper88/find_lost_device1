import 'dart:io';import 'package:find_lost_device1/screens/battery_screen.dart';import 'package:find_lost_device1/screens/do_not_touch_phone_screen.dart';import 'package:find_lost_device1/screens/erase_data_screen.dart';import 'package:find_lost_device1/screens/flash_light_screen.dart';import 'package:find_lost_device1/screens/google_sign_screen.dart';import 'package:find_lost_device1/screens/help_screen.dart';import 'package:find_lost_device1/screens/lock_screen.dart';import 'package:find_lost_device1/screens/ring_tone_screen.dart';import 'package:find_lost_device1/screens/vibrate_screen.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:in_app_review/in_app_review.dart';import 'package:share/share.dart';import 'find_location.dart';import 'last_try_screen.dart';class Dashboard extends StatefulWidget {  @override  _DashboardState createState() => _DashboardState();}enum Availability { LOADING, AVAILABLE, UNAVAILABLE }extension on Availability {  String stringify() => this.toString().split('.').last;}class _DashboardState extends State<Dashboard> {  String text = '';  String subject = '';  final InAppReview _inAppReview = InAppReview.instance;  String _appStoreId = '';  String _microsoftStoreId = '';  Availability _availability = Availability.LOADING;  final FirebaseAuth _auth = FirebaseAuth.instance;  static const platform1 = const MethodChannel('flutter.native/helper');  Future<void> responseUninstallApp() async {    String res = "";    try {      final String result = await platform1.invokeMethod("uninstallApp");      res = result;    } on PlatformException catch (e) {      res = "Failed to Invoke: '${e.message}'.";    }    setState(() {      // _responseFromNativeCode1=res;    });  }  @override  void initState() {    WidgetsBinding.instance.addPostFrameCallback((_) async {      try {        final isAvailable = await _inAppReview.isAvailable();        setState(() {          _availability = isAvailable && !Platform.isAndroid              ? Availability.AVAILABLE              : Availability.UNAVAILABLE;        });      } catch (e) {        setState(() => _availability = Availability.UNAVAILABLE);      }    });    // TODO: implement initState    super.initState();  }  void _setAppStoreId(String id) => _appStoreId = id;  void _setMicrosoftStoreId(String id) => _microsoftStoreId = id;  Future<void> _requestReview() => _inAppReview.requestReview();  Future<void> _openStoreListing() => _inAppReview.openStoreListing(        appStoreId: _appStoreId,        microsoftStoreId: _microsoftStoreId,      );  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text("Find Lost Phone"),      ),      body: Container(        child: Column(          children: <Widget>[            Center(                child: ElevatedButton(              onPressed: () {                if (_auth.currentUser != null) {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) => new FlashLight(                            email: _auth.currentUser.email,                            displayName: _auth.currentUser.displayName,                            photoURL: _auth.currentUser.photoURL,                            uid: _auth.currentUser.uid)),                  );                } else {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) =>                            new GoogleSignScreen(screen: "Flash")),                  );                }              },              child: Text("Flash Screen"),            )),            SizedBox(              height: 4,            ),            Center(                child: ElevatedButton(              onPressed: () {                if (_auth.currentUser != null) {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) => new LockScreen(                            email: _auth.currentUser.email,                            displayName: _auth.currentUser.displayName,                            photoURL: _auth.currentUser.photoURL,                            uid: _auth.currentUser.uid)),                  );                } else {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) =>                            new GoogleSignScreen(screen: "lockScreen")),                  );                }              },              child: Text("Lock Screen"),            )),            SizedBox(              height: 4,            ),            Center(                child: ElevatedButton(              onPressed: () {                if (_auth.currentUser != null) {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) => new FindLocationScreen(                            email: _auth.currentUser.email,                            displayName: _auth.currentUser.displayName,                            photoURL: _auth.currentUser.photoURL,                            uid: _auth.currentUser.uid)),                  );                } else {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) =>                            new GoogleSignScreen(screen: "location")),                  );                }              },              child: Text("Find Location"),            )),            Center(                child: ElevatedButton(              onPressed: () {                if (_auth.currentUser != null) {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) => new RingToneScreen(                            email: _auth.currentUser.email,                            displayName: _auth.currentUser.displayName,                            photoURL: _auth.currentUser.photoURL,                            uid: _auth.currentUser.uid)),                  );                } else {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) =>                            new GoogleSignScreen(screen: "Ring")),                  );                }              },              child: Text("Ring Phone"),            )),            Center(                child: ElevatedButton(              onPressed: () {                if (_auth.currentUser != null) {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) => new EraseDataScreen(                            email: _auth.currentUser.email,                            displayName: _auth.currentUser.displayName,                            photoURL: _auth.currentUser.photoURL,                            uid: _auth.currentUser.uid)),                  );                } else {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) =>                            new GoogleSignScreen(screen: "EraseData")),                  );                }              },              child: Text("Erase Phone Data"),            )),            Center(                child: ElevatedButton(              onPressed: () {                if (_auth.currentUser != null) {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) => new VibrateScreen(                            email: _auth.currentUser.email,                            displayName: _auth.currentUser.displayName,                            photoURL: _auth.currentUser.photoURL,                            uid: _auth.currentUser.uid)),                  );                } else {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) =>                            new GoogleSignScreen(screen: "Vibrate")),                  );                }              },              child: Text("Vibrate Phone"),            )),            SizedBox(              height: 4,            ),            Center(                child: ElevatedButton(              onPressed: () {                if (_auth.currentUser != null) {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) => new LastTryScreen(                            email: _auth.currentUser.email,                            displayName: _auth.currentUser.displayName,                            photoURL: _auth.currentUser.photoURL,                            uid: _auth.currentUser.uid)),                  );                } else {                  Navigator.push(                    context,                    new MaterialPageRoute(                        builder: (ctxt) =>                            new GoogleSignScreen(screen: "LastTry")),                  );                }              },              child: Text("Last Try"),            )),            Center(                child: ElevatedButton(              onPressed: () {                // if (_auth.currentUser != null) {                Navigator.push(                  context,                  new MaterialPageRoute(                      builder: (ctxt) => new DontTouchScreen()),                );                // } else {                //   Navigator.push(                //     context,                //     new MaterialPageRoute(                //         builder: (ctxt) =>                //         new GoogleSignScreen(screen: "Flash")),                //   );                // }              },              child: Text("Don't touch phone"),            )),            Center(                child: ElevatedButton(              onPressed: () {                // if (_auth.currentUser != null) {                Navigator.push(                  context,                  new MaterialPageRoute(builder: (ctxt) => new BatteryScreen()),                );              },              child: Text("Don't Unplug"),            )),            Center(                child: ElevatedButton(              onPressed: () async {                if (await _inAppReview.isAvailable()) {                  _inAppReview.requestReview();                } else {                  print("app review");                  _inAppReview.openStoreListing(                      appStoreId: '<YOUR_APP_STORE_ID>');                }                // if (_auth.currentUser != null) {              },              child: Text("Rate Us"),            )),            Center(                child: ElevatedButton(              onPressed: () {                _onShareApp(context);              },              child: Text("Share app"),            )),            Center(                child: ElevatedButton(              onPressed: () {                Navigator.push(                  context,                  new MaterialPageRoute(builder: (ctxt) => new HelpScreen()),                );              },              child: Text("Help"),            )),            Center(                child: ElevatedButton(                    onPressed: responseUninstallApp,                    child: Text("Uninstall app"))),            // Center(            //     child: ElevatedButton(            //   onPressed: () async {            //     if (_auth.currentUser != null) {            //       print("User Name: ${_auth.currentUser.displayName}");            //       print("User Email ${_auth.currentUser.email}");            //       print("User Profile ${_auth.currentUser.photoURL}");            //       print("User Profile ${_auth.currentUser.uid}");            //       Navigator.push(            //         context,            //         new MaterialPageRoute(            //             builder: (ctxt) => new UserInformation(            //                 email: _auth.currentUser.email,            //                 displayName: _auth.currentUser.displayName,            //                 photoURL: _auth.currentUser.photoURL,            //                 uid: _auth.currentUser.uid)),            //       );            //     } else {            //       Navigator.push(            //         context,            //         new MaterialPageRoute(            //             builder: (ctxt) => new GoogleSignScreen(            //                   screen: "google",            //                 )),            //       );            //     }            //   },            //   child: Text("Lock Screen"),            // )),            // Center(            //     child: ElevatedButton(            //   onPressed: () {            //     Navigator.push(            //       context,            //       new MaterialPageRoute(builder: (ctxt) => new Application()),            //     );            //   },            //   child: Text("Push Notification"),            // )),          ],        ),      ),    );  }  _onShareApp(BuildContext context) async {    final RenderBox box = context.findRenderObject() as RenderBox;    await Share.share("app link here paste for share other friends",        subject: "App Share",        sharePositionOrigin: box.localToGlobal(Offset.zero) & box.size);  }}