import 'dart:convert';import 'package:find_lost_device1/model/device_model.dart';import 'package:firebase_database/firebase_database.dart';import 'package:flashlight/flashlight.dart';import 'package:flutter/material.dart';import 'package:http/http.dart' as http;class FlashLight extends StatefulWidget{  String email, displayName, photoURL, uid;  FlashLight({this.email, this.displayName, this.photoURL, this.uid});  @override  _FlashLight createState() => _FlashLight();}class _FlashLight extends State<FlashLight> {  List<DeviceModel> deviceModel = [];  bool hasFlashLightStatus = false; //to set is there any flashlight ?  bool isturnon = false; //to set if flash light is on or off  IconData flashicon = Icons.flash_off; //icon for lashlight button  Color flashbtncolor = Colors.deepOrangeAccent; //color for flash button  @override  void initState() {    Future.delayed(Duration.zero,() async {      //we use Future.delayed because there is async function inside it.      bool istherelight = await Flashlight.hasFlashlight;      setState(() {        hasFlashLightStatus = istherelight;      });    });    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(        appBar:AppBar(title:Text("Flash Light")),        body: Container(          width:double.infinity,          height:MediaQuery.of(context).size.height,          alignment: Alignment.center,          padding: EdgeInsets.all(40),          //set width and height of outermost wrapper to 100%;          child:flashlightbutton(),        )    );  }  Widget flashlightbutton(){    if(hasFlashLightStatus){      return Column(children: [        Text("Your device has flash light."),        Text(isturnon ? "Flash is ON" : 'Flash is OFF'),        Container(            child: FlatButton.icon(              onPressed: (){                if(isturnon){                  //if light is on, then turn off                  Flashlight.lightOff();                  setState(() {                    isturnon = false;                    flashicon = Icons.flash_off;                    flashbtncolor = Colors.deepOrangeAccent;                  });                }else{                  //if light is off, then turn on.                  Flashlight.lightOn();                  setState(() {                    isturnon = true;                    flashicon = Icons.flash_on;                    flashbtncolor = Colors.greenAccent;                  });                }              },              icon: Icon(flashicon, color: Colors.white,),              color: flashbtncolor,              label: Text(isturnon ? 'TURN OFF' : 'TURN ON',                style: TextStyle(color: Colors.white),              ),            )        ),        Expanded(child: Center(          child: FutureBuilder(              future: FirebaseDatabase.instance.reference().once(),              builder: (BuildContext context, AsyncSnapshot<DataSnapshot> snapshot) {                if (snapshot.hasData) {                  deviceModel.clear();                  Map<dynamic, dynamic> values = snapshot.data.value;                  values.forEach((key,values){                    if(values['email'] == widget.email) {                    deviceModel.add(DeviceModel(                        key,                        values['deviceModel'],                        values['email'],                        values['name'],                        values['manufactureName'],                        values['deviceToken'],                        values['lat'],                        values['lng']));                    }                  });                  return ListView.builder(                      itemCount: deviceModel.length,                      itemBuilder: (context, index) {                        return Card(                          color: Colors.red,                          //elevation: 2.0,                          child: GestureDetector(                            onTap: () {                              print("click");                              sendFcmMessage("Flash","Flash Light Open",deviceModel[index].deviceToken);                            },                            child: new ListTile(                              title: new Text(                                  "Device Mode:${deviceModel[index].deviceModel}"),                            ),                          ),                        );                      });                } else if (snapshot.hasError) {                  return Icon(Icons.error_outline);                } else {                  return CircularProgressIndicator();                }              }),        ))      ],);    }else{      return Text("Your device do not have flash light.");    }  }  Future<bool> sendFcmMessage(String title, String message,String token) async {    try {      var url = 'https://fcm.googleapis.com/fcm/send';      var header = {        "Content-Type": "application/json",        "Authorization":        "Bearer	AAAAzpd-_iA:APA91bGqz8ppYKEP2Ff6GRn6Ksh3X-QwAGPx-c7vQTr_tpEa-y6C2VjJKAOc3duHuOrfDyJV2EE5kxVFlQLjnXYA0aFV700SjSBPb0bgC4rCxJzUI9ieeoXu4x2CvReJGfo5-wNOtTsl",      };      // var request = {      //   "notification": {      //     "title": title,      //     "text": message,      //     "sound": "default",      //     "color": "#990000",      //   },      //   "priority": "high",      //   "to": "/topics/all",      // };      // var request = {      //   'notification': {'title': title, 'body': message},      //   'data': {      //     'click_action': 'FLUTTER_NOTIFICATION_CLICK',      //     'type': 'COMMENT'      //   },      //   'to':token      // };      var request = {        "registration_ids":[          token        ],        "priority":"high",        "data":{          "body":message,          "title":title        }      };      // var request = {      //   "message":{      //     "token":token,      //     "data" : {      //       "title" : title,      //       "body" : message      //     }      //   }      // };      var response =      await http.post(Uri.parse(url), headers: header, body: json.encode(request));      print(response.body);      return true;    } catch (e, s) {      print(e);      return false;    }  }}