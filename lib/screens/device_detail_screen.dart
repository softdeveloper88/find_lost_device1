import 'package:firebase_database/firebase_database.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:geocoder/geocoder.dart';import 'package:geocoder/model.dart';import 'package:geolocator/geolocator.dart';import 'package:maps_launcher/maps_launcher.dart';import 'package:progress_dialog/progress_dialog.dart';class DeviceDetailScreen extends StatefulWidget {  String email, displayName;  String deviceId;  DeviceDetailScreen({this.email, this.displayName, this.deviceId});  @override  _DeviceDetailScreenState createState() => _DeviceDetailScreenState();}class _DeviceDetailScreenState extends State<DeviceDetailScreen> {  Geolocator geolocator = Geolocator()..forceAndroidLocationManager;  Position position;  Geolocator geoLocator = Geolocator(); static String currentDeviceAddress = "No location found";  ProgressDialog pr;  static double lat=4.4, lng=4.4;  // Future<String> _getAddressFromLatLng(double lat,double lng) async {  //   String _currentAddress;  //   try {  //     List<Placemark> p = await geolocator.placemarkFromCoordinates(  //         lat, lng);  //     Placemark place = p[0];  //     // setState(() {  //     _currentAddress=  //     "${place.locality}, ${place.postalCode}, ${place.country}";  //     // });  //     print(_currentAddress);  //   } catch (e) {  //     print(e);  //   }  //   return _currentAddress;  // }  Future<void> getDeviceLatLong() async {    print(widget.deviceId);    await FirebaseDatabase.instance        .reference()        .child(widget.deviceId)        .once()        .then((DataSnapshot snapshot) {      print(snapshot.value);        print(snapshot.value["lat"]);        lat = snapshot.value['lat'];        lng = snapshot.value['lng'];        _getDeviceAddressFromLatLng(lat, lng).then((value) {          print(currentDeviceAddress);          currentDeviceAddress = value;        }).catchError((_) {        });      });    // });  }  Future<String> _getDeviceAddressFromLatLng(double lat, double lng) async {    var _currentAddress2;    try {      // List<Placemark> p = await Geocoder(      //     lat,lng);      // Placemark place = p[0];      final coordinates =          new Coordinates(lat, lng);      var addresses =          await Geocoder.local.findAddressesFromCoordinates(coordinates);      var first = addresses.first;      print("${first.addressLine}");      setState(() {        _currentAddress2 = "${first.addressLine}";      });    } catch (e) {      print(e);    }    return _currentAddress2;  }  @override  void initState() {    print(widget.deviceId);    getDeviceLatLong();    // TODO: implement initState    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(        appBar: AppBar(          title: Text("Find Lost Phone"),        ),        body: Container(            child: Column(                crossAxisAlignment: CrossAxisAlignment.center,                children: <Widget>[              SizedBox(                height: 10,              ),              Center(                child: Card(                  child: Container(                    child: Column(children: <Widget>[                      // Padding(                      //   padding: const EdgeInsets.all(8.0),                      //   child: Container(                      //       height: 40.0,                      //       width: 40.0,                      //       decoration: new BoxDecoration(                      //         border: Border.all(),                      //         shape: BoxShape.circle,                      //         image: new DecorationImage(                      //           fit: BoxFit.cover,                      //           image: NetworkImage(""),                      //         ),                      //       )),                      // ),                      Padding(                        padding: const EdgeInsets.all(8.0),                        child: Text(widget.displayName),                      ),                      Padding(                        padding: const EdgeInsets.all(8.0),                        child: Text(widget.email == null ? '' : widget.email),                      ),                      Padding(                        padding: const EdgeInsets.all(8.0),                        child: Text("Device Location"),                      ),                      Padding(                        padding: const EdgeInsets.all(8.0),                        child:                            Text(currentDeviceAddress ?? "No location found"),                      ),                      Padding(                        padding: const EdgeInsets.all(8.0),                        child: ElevatedButton(                          onPressed: () => MapsLauncher.launchCoordinates(                              lat??0.33, lng??0.44, 'Your Mobile here'),                          child: Text('LAUNCH COORDINATES'),                        ),                      ),                    ]),                  ),                ),              ),            ])));  }}